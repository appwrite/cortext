/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyEmailRouteImport } from './routes/verify-email'
import { Route as TestErrorRouteImport } from './routes/test-error'
import { Route as DocsRouteImport } from './routes/docs'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as R404RouteImport } from './routes/404'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DocsIndexRouteImport } from './routes/docs/index'
import { Route as DocsQuickStartRouteImport } from './routes/docs/quick-start'
import { Route as DocsInstallationRouteImport } from './routes/docs/installation'
import { Route as DocsCollaborationRouteImport } from './routes/docs/collaboration'
import { Route as DocsBlocksRouteImport } from './routes/docs/blocks'
import { Route as DocsApiRouteImport } from './routes/docs/api'
import { Route as DocsAiCoauthorRouteImport } from './routes/docs/ai-coauthor'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard'
import { Route as ProtectedContentRouteImport } from './routes/_protected/content'
import { Route as AuthSignUpRouteImport } from './routes/_auth/sign-up'
import { Route as AuthSignOutRouteImport } from './routes/_auth/sign-out'
import { Route as AuthSignInRouteImport } from './routes/_auth/sign-in'

const VerifyEmailRoute = VerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const TestErrorRoute = TestErrorRouteImport.update({
  id: '/test-error',
  path: '/test-error',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsIndexRoute = DocsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocsRoute,
} as any)
const DocsQuickStartRoute = DocsQuickStartRouteImport.update({
  id: '/quick-start',
  path: '/quick-start',
  getParentRoute: () => DocsRoute,
} as any)
const DocsInstallationRoute = DocsInstallationRouteImport.update({
  id: '/installation',
  path: '/installation',
  getParentRoute: () => DocsRoute,
} as any)
const DocsCollaborationRoute = DocsCollaborationRouteImport.update({
  id: '/collaboration',
  path: '/collaboration',
  getParentRoute: () => DocsRoute,
} as any)
const DocsBlocksRoute = DocsBlocksRouteImport.update({
  id: '/blocks',
  path: '/blocks',
  getParentRoute: () => DocsRoute,
} as any)
const DocsApiRoute = DocsApiRouteImport.update({
  id: '/api',
  path: '/api',
  getParentRoute: () => DocsRoute,
} as any)
const DocsAiCoauthorRoute = DocsAiCoauthorRouteImport.update({
  id: '/ai-coauthor',
  path: '/ai-coauthor',
  getParentRoute: () => DocsRoute,
} as any)
const ProtectedDashboardRoute = ProtectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedContentRoute = ProtectedContentRouteImport.update({
  id: '/content',
  path: '/content',
  getParentRoute: () => ProtectedRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignOutRoute = AuthSignOutRouteImport.update({
  id: '/sign-out',
  path: '/sign-out',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/404': typeof R404Route
  '/docs': typeof DocsRouteWithChildren
  '/test-error': typeof TestErrorRoute
  '/verify-email': typeof VerifyEmailRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-out': typeof AuthSignOutRoute
  '/sign-up': typeof AuthSignUpRoute
  '/content': typeof ProtectedContentRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/docs/ai-coauthor': typeof DocsAiCoauthorRoute
  '/docs/api': typeof DocsApiRoute
  '/docs/blocks': typeof DocsBlocksRoute
  '/docs/collaboration': typeof DocsCollaborationRoute
  '/docs/installation': typeof DocsInstallationRoute
  '/docs/quick-start': typeof DocsQuickStartRoute
  '/docs/': typeof DocsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/404': typeof R404Route
  '/test-error': typeof TestErrorRoute
  '/verify-email': typeof VerifyEmailRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-out': typeof AuthSignOutRoute
  '/sign-up': typeof AuthSignUpRoute
  '/content': typeof ProtectedContentRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/docs/ai-coauthor': typeof DocsAiCoauthorRoute
  '/docs/api': typeof DocsApiRoute
  '/docs/blocks': typeof DocsBlocksRoute
  '/docs/collaboration': typeof DocsCollaborationRoute
  '/docs/installation': typeof DocsInstallationRoute
  '/docs/quick-start': typeof DocsQuickStartRoute
  '/docs': typeof DocsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/404': typeof R404Route
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/docs': typeof DocsRouteWithChildren
  '/test-error': typeof TestErrorRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-out': typeof AuthSignOutRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_protected/content': typeof ProtectedContentRoute
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/docs/ai-coauthor': typeof DocsAiCoauthorRoute
  '/docs/api': typeof DocsApiRoute
  '/docs/blocks': typeof DocsBlocksRoute
  '/docs/collaboration': typeof DocsCollaborationRoute
  '/docs/installation': typeof DocsInstallationRoute
  '/docs/quick-start': typeof DocsQuickStartRoute
  '/docs/': typeof DocsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/404'
    | '/docs'
    | '/test-error'
    | '/verify-email'
    | '/sign-in'
    | '/sign-out'
    | '/sign-up'
    | '/content'
    | '/dashboard'
    | '/docs/ai-coauthor'
    | '/docs/api'
    | '/docs/blocks'
    | '/docs/collaboration'
    | '/docs/installation'
    | '/docs/quick-start'
    | '/docs/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/404'
    | '/test-error'
    | '/verify-email'
    | '/sign-in'
    | '/sign-out'
    | '/sign-up'
    | '/content'
    | '/dashboard'
    | '/docs/ai-coauthor'
    | '/docs/api'
    | '/docs/blocks'
    | '/docs/collaboration'
    | '/docs/installation'
    | '/docs/quick-start'
    | '/docs'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/404'
    | '/_auth'
    | '/_protected'
    | '/docs'
    | '/test-error'
    | '/verify-email'
    | '/_auth/sign-in'
    | '/_auth/sign-out'
    | '/_auth/sign-up'
    | '/_protected/content'
    | '/_protected/dashboard'
    | '/docs/ai-coauthor'
    | '/docs/api'
    | '/docs/blocks'
    | '/docs/collaboration'
    | '/docs/installation'
    | '/docs/quick-start'
    | '/docs/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  R404Route: typeof R404Route
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
  DocsRoute: typeof DocsRouteWithChildren
  TestErrorRoute: typeof TestErrorRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-error': {
      id: '/test-error'
      path: '/test-error'
      fullPath: '/test-error'
      preLoaderRoute: typeof TestErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/': {
      id: '/docs/'
      path: '/'
      fullPath: '/docs/'
      preLoaderRoute: typeof DocsIndexRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/quick-start': {
      id: '/docs/quick-start'
      path: '/quick-start'
      fullPath: '/docs/quick-start'
      preLoaderRoute: typeof DocsQuickStartRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/installation': {
      id: '/docs/installation'
      path: '/installation'
      fullPath: '/docs/installation'
      preLoaderRoute: typeof DocsInstallationRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/collaboration': {
      id: '/docs/collaboration'
      path: '/collaboration'
      fullPath: '/docs/collaboration'
      preLoaderRoute: typeof DocsCollaborationRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/blocks': {
      id: '/docs/blocks'
      path: '/blocks'
      fullPath: '/docs/blocks'
      preLoaderRoute: typeof DocsBlocksRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/api': {
      id: '/docs/api'
      path: '/api'
      fullPath: '/docs/api'
      preLoaderRoute: typeof DocsApiRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/ai-coauthor': {
      id: '/docs/ai-coauthor'
      path: '/ai-coauthor'
      fullPath: '/docs/ai-coauthor'
      preLoaderRoute: typeof DocsAiCoauthorRouteImport
      parentRoute: typeof DocsRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/content': {
      id: '/_protected/content'
      path: '/content'
      fullPath: '/content'
      preLoaderRoute: typeof ProtectedContentRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sign-out': {
      id: '/_auth/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof AuthSignOutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignOutRoute: typeof AuthSignOutRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignOutRoute: AuthSignOutRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedRouteChildren {
  ProtectedContentRoute: typeof ProtectedContentRoute
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedContentRoute: ProtectedContentRoute,
  ProtectedDashboardRoute: ProtectedDashboardRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

interface DocsRouteChildren {
  DocsAiCoauthorRoute: typeof DocsAiCoauthorRoute
  DocsApiRoute: typeof DocsApiRoute
  DocsBlocksRoute: typeof DocsBlocksRoute
  DocsCollaborationRoute: typeof DocsCollaborationRoute
  DocsInstallationRoute: typeof DocsInstallationRoute
  DocsQuickStartRoute: typeof DocsQuickStartRoute
  DocsIndexRoute: typeof DocsIndexRoute
}

const DocsRouteChildren: DocsRouteChildren = {
  DocsAiCoauthorRoute: DocsAiCoauthorRoute,
  DocsApiRoute: DocsApiRoute,
  DocsBlocksRoute: DocsBlocksRoute,
  DocsCollaborationRoute: DocsCollaborationRoute,
  DocsInstallationRoute: DocsInstallationRoute,
  DocsQuickStartRoute: DocsQuickStartRoute,
  DocsIndexRoute: DocsIndexRoute,
}

const DocsRouteWithChildren = DocsRoute._addFileChildren(DocsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  R404Route: R404Route,
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
  DocsRoute: DocsRouteWithChildren,
  TestErrorRoute: TestErrorRoute,
  VerifyEmailRoute: VerifyEmailRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
