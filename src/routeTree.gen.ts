/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedDashboardOldRouteImport } from './routes/_protected/dashboard-old'
import { Route as ProtectedDashboardNewRouteImport } from './routes/_protected/dashboard-new'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard'
import { Route as AuthSignUpRouteImport } from './routes/_auth/sign-up'
import { Route as AuthSignOutRouteImport } from './routes/_auth/sign-out'
import { Route as AuthSignInRouteImport } from './routes/_auth/sign-in'
import { Route as ProtectedDashboardArticleIdOldRouteImport } from './routes/_protected/dashboard.$articleId-old'
import { Route as ProtectedDashboardArticleIdNewRouteImport } from './routes/_protected/dashboard.$articleId-new'
import { Route as ProtectedDashboardArticleIdRouteImport } from './routes/_protected/dashboard.$articleId'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedDashboardOldRoute = ProtectedDashboardOldRouteImport.update({
  id: '/dashboard-old',
  path: '/dashboard-old',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedDashboardNewRoute = ProtectedDashboardNewRouteImport.update({
  id: '/dashboard-new',
  path: '/dashboard-new',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedDashboardRoute = ProtectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignOutRoute = AuthSignOutRouteImport.update({
  id: '/sign-out',
  path: '/sign-out',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const ProtectedDashboardArticleIdOldRoute =
  ProtectedDashboardArticleIdOldRouteImport.update({
    id: '/$articleId-old',
    path: '/$articleId-old',
    getParentRoute: () => ProtectedDashboardRoute,
  } as any)
const ProtectedDashboardArticleIdNewRoute =
  ProtectedDashboardArticleIdNewRouteImport.update({
    id: '/$articleId-new',
    path: '/$articleId-new',
    getParentRoute: () => ProtectedDashboardRoute,
  } as any)
const ProtectedDashboardArticleIdRoute =
  ProtectedDashboardArticleIdRouteImport.update({
    id: '/$articleId',
    path: '/$articleId',
    getParentRoute: () => ProtectedDashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-out': typeof AuthSignOutRoute
  '/sign-up': typeof AuthSignUpRoute
  '/dashboard': typeof ProtectedDashboardRouteWithChildren
  '/dashboard-new': typeof ProtectedDashboardNewRoute
  '/dashboard-old': typeof ProtectedDashboardOldRoute
  '/dashboard/$articleId': typeof ProtectedDashboardArticleIdRoute
  '/dashboard/$articleId-new': typeof ProtectedDashboardArticleIdNewRoute
  '/dashboard/$articleId-old': typeof ProtectedDashboardArticleIdOldRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-out': typeof AuthSignOutRoute
  '/sign-up': typeof AuthSignUpRoute
  '/dashboard': typeof ProtectedDashboardRouteWithChildren
  '/dashboard-new': typeof ProtectedDashboardNewRoute
  '/dashboard-old': typeof ProtectedDashboardOldRoute
  '/dashboard/$articleId': typeof ProtectedDashboardArticleIdRoute
  '/dashboard/$articleId-new': typeof ProtectedDashboardArticleIdNewRoute
  '/dashboard/$articleId-old': typeof ProtectedDashboardArticleIdOldRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-out': typeof AuthSignOutRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_protected/dashboard': typeof ProtectedDashboardRouteWithChildren
  '/_protected/dashboard-new': typeof ProtectedDashboardNewRoute
  '/_protected/dashboard-old': typeof ProtectedDashboardOldRoute
  '/_protected/dashboard/$articleId': typeof ProtectedDashboardArticleIdRoute
  '/_protected/dashboard/$articleId-new': typeof ProtectedDashboardArticleIdNewRoute
  '/_protected/dashboard/$articleId-old': typeof ProtectedDashboardArticleIdOldRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/sign-out'
    | '/sign-up'
    | '/dashboard'
    | '/dashboard-new'
    | '/dashboard-old'
    | '/dashboard/$articleId'
    | '/dashboard/$articleId-new'
    | '/dashboard/$articleId-old'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-out'
    | '/sign-up'
    | '/dashboard'
    | '/dashboard-new'
    | '/dashboard-old'
    | '/dashboard/$articleId'
    | '/dashboard/$articleId-new'
    | '/dashboard/$articleId-old'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_protected'
    | '/_auth/sign-in'
    | '/_auth/sign-out'
    | '/_auth/sign-up'
    | '/_protected/dashboard'
    | '/_protected/dashboard-new'
    | '/_protected/dashboard-old'
    | '/_protected/dashboard/$articleId'
    | '/_protected/dashboard/$articleId-new'
    | '/_protected/dashboard/$articleId-old'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/dashboard-old': {
      id: '/_protected/dashboard-old'
      path: '/dashboard-old'
      fullPath: '/dashboard-old'
      preLoaderRoute: typeof ProtectedDashboardOldRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/dashboard-new': {
      id: '/_protected/dashboard-new'
      path: '/dashboard-new'
      fullPath: '/dashboard-new'
      preLoaderRoute: typeof ProtectedDashboardNewRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sign-out': {
      id: '/_auth/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof AuthSignOutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_protected/dashboard/$articleId-old': {
      id: '/_protected/dashboard/$articleId-old'
      path: '/$articleId-old'
      fullPath: '/dashboard/$articleId-old'
      preLoaderRoute: typeof ProtectedDashboardArticleIdOldRouteImport
      parentRoute: typeof ProtectedDashboardRoute
    }
    '/_protected/dashboard/$articleId-new': {
      id: '/_protected/dashboard/$articleId-new'
      path: '/$articleId-new'
      fullPath: '/dashboard/$articleId-new'
      preLoaderRoute: typeof ProtectedDashboardArticleIdNewRouteImport
      parentRoute: typeof ProtectedDashboardRoute
    }
    '/_protected/dashboard/$articleId': {
      id: '/_protected/dashboard/$articleId'
      path: '/$articleId'
      fullPath: '/dashboard/$articleId'
      preLoaderRoute: typeof ProtectedDashboardArticleIdRouteImport
      parentRoute: typeof ProtectedDashboardRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignOutRoute: typeof AuthSignOutRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignOutRoute: AuthSignOutRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedDashboardRouteChildren {
  ProtectedDashboardArticleIdRoute: typeof ProtectedDashboardArticleIdRoute
  ProtectedDashboardArticleIdNewRoute: typeof ProtectedDashboardArticleIdNewRoute
  ProtectedDashboardArticleIdOldRoute: typeof ProtectedDashboardArticleIdOldRoute
}

const ProtectedDashboardRouteChildren: ProtectedDashboardRouteChildren = {
  ProtectedDashboardArticleIdRoute: ProtectedDashboardArticleIdRoute,
  ProtectedDashboardArticleIdNewRoute: ProtectedDashboardArticleIdNewRoute,
  ProtectedDashboardArticleIdOldRoute: ProtectedDashboardArticleIdOldRoute,
}

const ProtectedDashboardRouteWithChildren =
  ProtectedDashboardRoute._addFileChildren(ProtectedDashboardRouteChildren)

interface ProtectedRouteChildren {
  ProtectedDashboardRoute: typeof ProtectedDashboardRouteWithChildren
  ProtectedDashboardNewRoute: typeof ProtectedDashboardNewRoute
  ProtectedDashboardOldRoute: typeof ProtectedDashboardOldRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedDashboardRoute: ProtectedDashboardRouteWithChildren,
  ProtectedDashboardNewRoute: ProtectedDashboardNewRoute,
  ProtectedDashboardOldRoute: ProtectedDashboardOldRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
